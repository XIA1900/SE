// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/fongziyjun16/SE/tree/backend",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articletype/create": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need new article type information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Create a new article type by admin user",
                "parameters": [
                    {
                        "description": "New Article Type Information",
                        "name": "ArticleTypeInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ArticleTypeInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Login Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Username / Password incorrect",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/create": {
            "post": {
                "description": "need strings creator \u0026 community name \u0026 description \u0026 create time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Create a new Community",
                "parameters": [
                    {
                        "description": "Create a new community needs Creator, Name \u0026 Description.",
                        "name": "CommunityInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Community Success",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Community already exists",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/deletecommunitybyid": {
            "post": {
                "description": "need ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Delete community information",
                "parameters": [
                    {
                        "description": "need ID",
                        "name": "communityInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/getcommunity": {
            "get": {
                "description": "need strings community name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get the Community by Name",
                "parameters": [
                    {
                        "description": "Create a new community needs Creator, Name \u0026 Description.",
                        "name": "CommunityInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Community Success",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Community already exists",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/updatecommunitybyid": {
            "post": {
                "description": "need ID, Name, Description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Update community information including Name, Description",
                "parameters": [
                    {
                        "description": "need ID, Name, Description",
                        "name": "communityInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.CommunityResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/delete": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need filename in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Delete User File, only have permission to delete self data",
                "parameters": [
                    {
                        "description": "filename in post request body",
                        "name": "filename",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Delete Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Other",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/download": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need filename in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "User Downloads File, only self data for now",
                "parameters": [
                    {
                        "description": "filename in post request body",
                        "name": "filename",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or No Enough Space",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/scan": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, only get self files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Scan User files",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Scan Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.UserFiles"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/space/info": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Browse User Space Info",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get User Space Info Successfully",
                        "schema": {
                            "$ref": "#/definitions/model.Space"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User not exists.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/space/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need target user and  new capacity in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Expand User Capacity, only admin user can do this",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "capacity(e.g. 16.8) in post request body",
                        "name": "capacity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Other",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/upload": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, html file type input element include name attribute with value \"uploadFilename\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "User Uploads files including images, video etc.",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or No Enough Space",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/resources/userfiles/{username}/{filename}": {
            "get": {
                "description": "Static files request, need to claim the username and filename in the url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Request User Files",
                "responses": {}
            }
        },
        "/user/admin/delete": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need strings username in post request, need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin delete Users, cannot self delete",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/admin/register": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "only need strings username \u0026 password \u0026 ForAdmin, need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Register a new Admin User",
                "parameters": [
                    {
                        "description": "Admin User Register only needs Username, Password(encoded by md5) \u0026 ForAdmin with true.",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Register Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User Has Existed",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/follow": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need username who is followed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "User Follow other users",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Follow Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User not exist or User has followed.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/followees": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Get User's followees",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.UserFollows"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/followers": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Get User's followers",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.UserFollows"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "only need strings username \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin / Regular User login",
                "parameters": [
                    {
                        "description": "only needs username and password",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Login Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Username / Password incorrect",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need strings username in post request, need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin / Regular User logout",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/password": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need Username, Password, NewPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin \u0026 Regular Update Password",
                "parameters": [
                    {
                        "description": "need Username, Password, NewPassword",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Password not match",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "only need strings username \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Register a new Regular User",
                "parameters": [
                    {
                        "description": "Regular User Register only needs Username, Password(encoded by md5) \u0026 ForAdmin with false.",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Register Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User Has Existed",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/unfollow": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need username who is followed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "User Unfollow other users",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Unfollow Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User not exist.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown), Department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Update user information including Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown), Department",
                "parameters": [
                    {
                        "description": "need Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown), Department",
                        "name": "NewUserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.NewUserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ArticleTypeInfo": {
            "type": "object",
            "properties": {
                "CreateDay": {
                    "type": "string",
                    "example": "2020-02-02"
                },
                "Creator": {
                    "type": "string",
                    "example": "James Bond"
                },
                "Description": {
                    "type": "string",
                    "example": "Discussion of Movie"
                },
                "TypeName": {
                    "type": "string",
                    "example": "Movie"
                }
            }
        },
        "controller.CommunityInfo": {
            "type": "object",
            "properties": {
                "Create_Time": {
                    "type": "string",
                    "example": "2020-01-01"
                },
                "Creator": {
                    "type": "string",
                    "example": "test1"
                },
                "Description": {
                    "type": "string",
                    "example": "this is a test community"
                },
                "Name": {
                    "type": "string",
                    "example": "community1"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "controller.CommunityResponseMsg": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "create_time": {
                    "type": "string",
                    "example": "create_time"
                },
                "creator": {
                    "type": "string",
                    "example": "creator"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                },
                "name": {
                    "type": "string",
                    "example": "name"
                },
                "num_member": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "controller.NewUserInfo": {
            "type": "object",
            "properties": {
                "Birthday": {
                    "type": "string",
                    "example": "2022-02-30"
                },
                "Department": {
                    "type": "string",
                    "example": "CS:GO"
                },
                "Gender": {
                    "type": "string",
                    "example": "male/female/unknown"
                },
                "Nickname": {
                    "type": "string",
                    "example": "Peter Park"
                },
                "Username": {
                    "type": "string",
                    "example": "jamesbond21"
                }
            }
        },
        "controller.ResponseMsg": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                }
            }
        },
        "controller.UserFiles": {
            "type": "object",
            "properties": {
                "Filenames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "\"xxx.jpg\"",
                        "\"xxx.png\"",
                        "\"xxx.gif\""
                    ]
                },
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                }
            }
        },
        "controller.UserFollows": {
            "type": "object",
            "properties": {
                "Users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "\"spriderman\"",
                        "\"batman\"",
                        "\"ironman\""
                    ]
                },
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                }
            }
        },
        "controller.UserInfo": {
            "type": "object",
            "properties": {
                "ForAdmin": {
                    "type": "boolean"
                },
                "NewPassword": {
                    "type": "string",
                    "example": "3ecb441b741bcd433288f5557e4b9118"
                },
                "Password": {
                    "type": "string",
                    "example": "f9ae5f68ae1e7f7f3fc06053e9b9b539"
                },
                "Username": {
                    "type": "string",
                    "example": "jamesbond21"
                }
            }
        },
        "model.Space": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "used": {
                    "type": "number"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiAuthToken": {
            "type": "apiKey",
            "name": "token",
            "in": "cookies"
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0",
	Host:             "http://167.71.166.120:10010",
	BasePath:         "/gf/api",
	Schemes:          []string{},
	Title:            "Gator Forum Backend API",
	Description:      "This is the Gator Forum Backend Server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
