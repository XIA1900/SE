basePath: /gf/api
definitions:
  controller.ArticleInfo:
    properties:
      CommunityID:
        example: 12
        type: integer
      Content:
        example: I love UF
        type: string
      Title:
        example: Gator Forum
        type: string
      TypeID:
        example: 12
        type: integer
    type: object
  controller.ArticleTypeInfo:
    properties:
      Description:
        example: Discussion of Movie
        type: string
      TypeName:
        example: Movie
        type: string
    type: object
  controller.CommunityInfo:
    properties:
      Create_Time:
        example: "2020-01-01"
        type: string
      Creator:
        example: test1
        type: string
      Description:
        example: this is a test community
        type: string
      Name:
        example: community1
        type: string
      id:
        type: integer
    type: object
  controller.CommunityResponseMsg:
    properties:
      code:
        example: 200
        type: integer
      create_time:
        example: create_time
        type: string
      creator:
        example: creator
        type: string
      description:
        example: description
        type: string
      id:
        example: 1
        type: integer
      message:
        example: process successfully
        type: string
      name:
        example: name
        type: string
      num_member:
        example: 1
        type: integer
    type: object
  controller.NewUserInfo:
    properties:
      Birthday:
        example: 2022-02-30
        type: string
      Department:
        example: CS:GO
        type: string
      Gender:
        example: male/female/unknown
        type: string
      Nickname:
        example: Peter Park
        type: string
      Username:
        example: jamesbond21
        type: string
    type: object
  controller.ResponseMsg:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: process successfully
        type: string
    type: object
  controller.UserFiles:
    properties:
      Filenames:
        example:
        - '"xxx.jpg"'
        - '"xxx.png"'
        - '"xxx.gif"'
        items:
          type: string
        type: array
      code:
        example: 200
        type: integer
      message:
        example: process successfully
        type: string
    type: object
  controller.UserFollows:
    properties:
      Users:
        example:
        - '"spriderman"'
        - '"batman"'
        - '"ironman"'
        items:
          type: string
        type: array
      code:
        example: 200
        type: integer
      message:
        example: process successfully
        type: string
    type: object
  controller.UserInfo:
    properties:
      ForAdmin:
        type: boolean
      NewPassword:
        example: 3ecb441b741bcd433288f5557e4b9118
        type: string
      Password:
        example: f9ae5f68ae1e7f7f3fc06053e9b9b539
        type: string
      Username:
        example: jamesbond21
        type: string
    type: object
  model.ArticleType:
    properties:
      create_Day:
        type: string
      creator:
        type: string
      description:
        type: string
      id:
        type: integer
      typeName:
        type: string
    type: object
  model.Space:
    properties:
      capacity:
        type: number
      id:
        type: integer
      used:
        type: number
      username:
        type: string
    type: object
host: http://167.71.166.120:10010
info:
  contact: {}
  description: This is the Gator Forum Backend Server
  termsOfService: https://github.com/fongziyjun16/SE/tree/backend
  title: Gator Forum Backend API
  version: "1.0"
paths:
  /article/create:
    post:
      consumes:
      - application/json
      description: need token in cookie, need new article info
      parameters:
      - description: Create New Article
        in: body
        name: ArticleInfo
        required: true
        schema:
          $ref: '#/definitions/controller.ArticleInfo'
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. Create Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters / Info Error
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Create a new article
      tags:
      - Article Manage
  /article/search/:SearchWord:
    post:
      consumes:
      - application/json
      description: need token in cookie, need new article search info
      parameters:
      - description: Search Word
        in: query
        name: SearchWord
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. Search Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      summary: Create a new article
      tags:
      - Article Manage
  /articlelike/create/:ArticleID:
    get:
      consumes:
      - application/json
      description: need token in cookie, need article id
      parameters:
      - description: "233333"
        in: query
        name: ArticleID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. Create Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: User like Article
      tags:
      - Article Like Manage
  /articletype/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. User Login Successfully
          schema:
            items:
              $ref: '#/definitions/model.ArticleType'
            type: array
        "400":
          description: <b>Failure</b>. Bad Parameters / Type has existed
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      summary: Get All Article Types
      tags:
      - Article Type Manage
  /articletype/create:
    post:
      consumes:
      - application/json
      description: need token in cookie, need new article type information, cannot
        repeat type name
      parameters:
      - description: New Article Type Information
        in: body
        name: ArticleTypeInfo
        required: true
        schema:
          $ref: '#/definitions/controller.ArticleTypeInfo'
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. Create Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters / Type has existed
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Create a new article type by admin user
      tags:
      - Article Type Manage
  /articletype/remove:
    post:
      consumes:
      - application/json
      description: need token in cookie, need type name
      parameters:
      - description: Type Name
        in: body
        name: TypeName
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. Remove Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Admin user removes article type
      tags:
      - Article Type Manage
  /articletype/update:
    post:
      consumes:
      - application/json
      description: need token in cookie, need type name & new description
      parameters:
      - description: Type Name
        in: body
        name: TypeName
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: Description
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. Update Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Admin user update article type description
      tags:
      - Article Type Manage
  /community/create:
    post:
      consumes:
      - application/json
      description: need strings creator & community name & description & create time
      parameters:
      - description: Create a new community needs Creator, Name & Description.
        in: body
        name: CommunityInfo
        required: true
        schema:
          $ref: '#/definitions/controller.CommunityInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Create Community Success
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or Community already exists
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      summary: Create a new Community
      tags:
      - Community Manage
  /community/deletecommunitybyid:
    post:
      consumes:
      - application/json
      description: need ID
      parameters:
      - description: need ID
        in: body
        name: communityInfo
        required: true
        schema:
          $ref: '#/definitions/controller.CommunityInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Update Password Successfully
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
      summary: Delete community information
      tags:
      - Community Manage
  /community/getcommunity:
    get:
      consumes:
      - application/json
      description: need strings community name
      parameters:
      - description: Create a new community needs Creator, Name & Description.
        in: body
        name: CommunityInfo
        required: true
        schema:
          $ref: '#/definitions/controller.CommunityInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Create Community Success
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or Community already exists
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
      summary: Get the Community by Name
      tags:
      - Community Manage
  /community/updatecommunitybyid:
    post:
      consumes:
      - application/json
      description: need ID, Name, Description
      parameters:
      - description: need ID, Name, Description
        in: body
        name: communityInfo
        required: true
        schema:
          $ref: '#/definitions/controller.CommunityInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Update Password Successfully
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.CommunityResponseMsg'
      summary: Update community information including Name, Description
      tags:
      - Community Manage
  /file/delete:
    post:
      consumes:
      - application/json
      description: need token in cookie, need filename in json
      parameters:
      - description: filename in post request body
        in: body
        name: filename
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Delete Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or Other
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Delete User File, only have permission to delete self data
      tags:
      - Static Resource
  /file/download:
    post:
      consumes:
      - application/json
      description: need token in cookie, need filename in json
      parameters:
      - description: filename in post request body
        in: body
        name: filename
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Upload Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or No Enough Space
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: User Downloads File, only self data for now
      tags:
      - Static Resource
  /file/scan:
    post:
      consumes:
      - application/json
      description: need token in cookie, only get self files
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Scan Successfully
          schema:
            $ref: '#/definitions/controller.UserFiles'
        "400":
          description: <b>Failure</b>. Bad Parameters.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Scan User files
      tags:
      - Static Resource
  /file/space/info:
    post:
      consumes:
      - application/json
      description: need token in cookie
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Get User Space Info Successfully
          schema:
            $ref: '#/definitions/model.Space'
        "400":
          description: <b>Failure</b>. Bad Parameters or User not exists.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Browse User Space Info
      tags:
      - Static Resource
  /file/space/update:
    post:
      consumes:
      - application/json
      description: need token in cookie, need target user and  new capacity in json
      parameters:
      - description: username in post request body
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: capacity(e.g. 16.8) in post request body
        in: body
        name: capacity
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Update Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or Other
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Expand User Capacity, only admin user can do this
      tags:
      - Static Resource
  /file/upload:
    post:
      consumes:
      - application/json
      description: need token in cookie, html file type input element include name
        attribute with value "uploadFilename"
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Upload Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or No Enough Space
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: User Uploads files including images, video etc.
      tags:
      - Static Resource
  /resources/userfiles/{username}/{filename}:
    get:
      consumes:
      - application/json
      description: Static files request, need to claim the username and filename in
        the url
      produces:
      - application/json
      responses: {}
      summary: Request User Files
      tags:
      - Static Resource
  /user/admin/delete:
    post:
      consumes:
      - application/json
      description: need strings username in post request, need token in cookie
      parameters:
      - description: username in post request body
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Update Password Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Admin delete Users, cannot self delete
      tags:
      - User Manage
  /user/admin/register:
    post:
      consumes:
      - application/json
      description: only need strings username & password & ForAdmin, need token in
        cookie
      parameters:
      - description: Admin User Register only needs Username, Password(encoded by
          md5) & ForAdmin with true.
        in: body
        name: UserInfo
        required: true
        schema:
          $ref: '#/definitions/controller.UserInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. User Register Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or User Has Existed
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Register a new Admin User
      tags:
      - User Manage
  /user/follow:
    post:
      consumes:
      - application/json
      description: need token in cookie, need username who is followed
      parameters:
      - description: username in post request body
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Follow Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or User not exist or User has
            followed.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: User Follow other users
      tags:
      - User Manage
  /user/followees:
    post:
      consumes:
      - application/json
      description: need token in cookie
      parameters:
      - description: username in post request body
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Search Successfully
          schema:
            $ref: '#/definitions/controller.UserFollows'
        "400":
          description: <b>Failure</b>. Bad Parameters.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Get User's followees
      tags:
      - User Manage
  /user/followers:
    post:
      consumes:
      - application/json
      description: need token in cookie
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Search Successfully
          schema:
            $ref: '#/definitions/controller.UserFollows'
        "400":
          description: <b>Failure</b>. Bad Parameters.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Get User's followers
      tags:
      - User Manage
  /user/login:
    post:
      consumes:
      - application/json
      description: only need strings username & password
      parameters:
      - description: only needs username and password
        in: body
        name: UserInfo
        required: true
        schema:
          $ref: '#/definitions/controller.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: <b>Success</b>. User Login Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or Username / Password incorrect
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      summary: Admin / Regular User login
      tags:
      - User Manage
  /user/logout:
    post:
      consumes:
      - application/json
      description: need strings username in post request, need token in cookie
      parameters:
      - description: username in post request body
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiAuthToken: []
      summary: Admin / Regular User logout
      tags:
      - User Manage
  /user/password:
    post:
      consumes:
      - application/json
      description: need token in cookie, need Username, Password, NewPassword
      parameters:
      - description: need Username, Password, NewPassword
        in: body
        name: UserInfo
        required: true
        schema:
          $ref: '#/definitions/controller.UserInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Update Password Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or Password not match
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Admin & Regular Update Password
      tags:
      - User Manage
  /user/register:
    post:
      consumes:
      - application/json
      description: only need strings username & password
      parameters:
      - description: Regular User Register only needs Username, Password(encoded by
          md5) & ForAdmin with false.
        in: body
        name: UserInfo
        required: true
        schema:
          $ref: '#/definitions/controller.UserInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. User Register Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or User Has Existed
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      summary: Register a new Regular User
      tags:
      - User Manage
  /user/unfollow:
    post:
      consumes:
      - application/json
      description: need token in cookie, need username who is followed
      parameters:
      - description: username in post request body
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Unfollow Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters or User not exist.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: User Unfollow other users
      tags:
      - User Manage
  /user/update:
    post:
      consumes:
      - application/json
      description: need token in cookie, need Nickname, Birthday(yyyy-mm-dd), Gender(male
        / female / unknown), Department
      parameters:
      - description: need Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown),
          Department
        in: body
        name: NewUserInfo
        required: true
        schema:
          $ref: '#/definitions/controller.NewUserInfo'
      produces:
      - application/json
      responses:
        "201":
          description: <b>Success</b>. Update Password Successfully
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "400":
          description: <b>Failure</b>. Bad Parameters
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
        "500":
          description: <b>Failure</b>. Server Internal Error.
          schema:
            $ref: '#/definitions/controller.ResponseMsg'
      security:
      - ApiAuthToken: []
      summary: Update user information including Nickname, Birthday(yyyy-mm-dd), Gender(male
        / female / unknown), Department
      tags:
      - User Manage
securityDefinitions:
  ApiAuthToken:
    in: cookies
    name: token
    type: apiKey
swagger: "2.0"
